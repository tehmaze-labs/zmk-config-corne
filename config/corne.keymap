/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// Layers
#define COL 0
#define NUM 1
#define NAV 2

// Macros
#define U_UNDO  LG(Z)
#define U_CUT   LG(X)
#define U_COPY  LG(C)
#define U_PSTE  LG(V)
#define U_REDO  LS(LG(Z))
#define U_CLIP  LC(LG(C))
#define U_SHOT  LS(LG(N4))

// Overwrite the display cs pin
&nice_view_spi {
  cs-gpios = <&pro_micro 0 GPIO_ACTIVE_HIGH>;
};

&lt {
  flavor = "tap-preferred";
  tapping-term-ms = <200>;
  quick-tap-ms = <0>;
};

/ {
  behaviors {
    hm: homerow_mods {
      compatible = "zmk,behavior-hold-tap";
      label = "HOMEROW_MODS";
      #binding-cells = <2>;
      tapping-term-ms = <200>;
      quick_tap_ms = <0>;
      flavor = "tap-preferred";
      bindings = <&kp>, <&kp>;
    };
  };

  keymap {
    compatible = "zmk,keymap";

    default_layer {
      bindings = <
      &kp     TAB &kp       Q &kp       W &kp       F &kp       P &kp       B /**/ &kp J       &kp L         &kp U       &kp Y       &kp SEMI    &kp BSPC
      &kp     ESC &hm LSHFT A &hm LCTRL R &hm  LALT S &hm  LGUI T &kp       G /**/ &kp M       &hm RGUI N    &hm RALT E  &hm RCTL I  &hm RSHFT O &kp SQT
      &kp   LSHFT &kp       Z &kp       X &kp       C &kp       D &kp       V /**/ &kp K       &kp H         &kp COMMA   &kp DOT     &kp FSLH    &kp RSHFT
                                          &mo     NAV &lt NAV RET &kp     TAB /**/ &kp BSPC    &lt NUM SPACE &mo NUM
      >;
    };

    num_layer {
      bindings = <
      &trans      &kp    EXCL &kp      AT &kp    HASH &kp    DLLR &kp   PRCNT /**/ &kp CARET   &kp AMPS      &kp STAR    &kp LPAR    &kp RPAR    &trans
      &trans      &kp      N1 &kp      N2 &kp      N3 &kp      N4 &kp      N5 /**/ &kp MINUS   &kp EQUAL     &kp GRAVE   &kp LBKT    &kp RBKT    &kp PIPE
      &kp   LSHFT &kp      N6 &kp      N7 &kp      N8 &kp      N9 &kp      N0 /**/ &kp UNDER   &kp PLUS      &kp TILDE   &kp LBRC    &kp RBRC    &trans
                                          &trans      &lt NAV RET &trans      /**/ &trans      &lt COL SPACE &trans
      >;
    };

    nav_layer {
      bindings = <
      &trans      &kp  LG(N1) &kp  LG(N2) &kp  LG(N3) &kp  LG(N4) &kp  LG(N5) /**/ &kp HOME    &kp PGUP      &kp UP      &kp PGDN    &kp END     &trans
      &trans      &kp      F1 &kp      F2 &kp      F3 &kp      F4 &kp      F5 /**/ &kp U_SHOT  &kp LEFT      &kp DOWN    &kp RIGHT   &none       &trans 
      &trans      &kp      F6 &kp      F7 &kp      F8 &kp      F9 &kp     F10 /**/ &kp C_PP    &kp C_PREV    &kp C_VOL_DN &kp C_VOL_UP &kp C_NEXT  &trans
                                          &trans      &lt COL RET &trans      /**/ &trans      &lt NUM SPACE &trans
      >;
    };
  };  
};
